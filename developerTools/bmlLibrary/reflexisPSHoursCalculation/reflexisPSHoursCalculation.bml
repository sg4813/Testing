ret = integer[];
hoursTotal= 0;
quoteSize = "";
nCount = range(sizeofarray(SKUArray));
nQuantity = range(sizeofarray(NumberofThirdpartyIntegration));
//print nCount;
//AdditionalHypercareweeksHours = 0;
hypercareweeksHours = 0;
pulseIntegrationQuantity = 0;
integrationAdded = false;
//Size
if(NumberofLocations > 2000){
	quoteSize = "XL";
}elif(NumberofLocations > 500 AND NumberofLocations <= 2000){
	quoteSize = "L";
}elif(NumberofLocations > 200 AND NumberofLocations <= 500){
	quoteSize = "M";
}else{
	quoteSize = "S";
}
for eachSKU in nCount{
	
	if(SKUArray[eachSKU] == "Number of third party integration use cases"){
		
			print "integration";
			pulseIntegrationQuantity = NumberofThirdpartyIntegration[eachSKU];

	}
	
}

//Additional Hypercare Weeks Hours
/*if(quoteSize == "S"){
	
	AdditionalHypercareweeksHours = 80;
	
}elif(quoteSize =="M"){
	
	AdditionalHypercareweeksHours = 120;
	
}elif(quoteSize == "L"){
	
	AdditionalHypercareweeksHours = 200;
	
}else{
	
	AdditionalHypercareweeksHours = 240;
	
}*/

recordSetHypercare = bmql("select Bill_Hours from PS_HOURS where Role_Type = 'AdditionalHypercareweeksHours' and Size = $quoteSize");

for eachHypercare in recordSetHypercare{
	
	
	hypercareweeksHours = atoi(get(eachHypercare,"Bill_Hours"));
	
	
}

if(NumberofAdditionalBanners > 10  OR AdditionalHypercareweeks > 8 OR IsAddonproduct OR TypeofBusiness == "New Vertical"){
	
	print 1;

	append(ret,0); // For Custom Professional Services SKU

}else{
	
	print 2;
	rs = bmql("Select * from RefSKUDetails where ProductFamilyDesc = 'Professional Services'");
	recordSet = bmql("select SKU,Role_Type,Bill_Hours from PS_HOURS where Size = $quoteSize");
	//for each in rs{
	for eachSKU in nCount{ 	
		//if(get(each,"SKU") == "Workforce Management Professional Services" OR get(each,"SKU") == "Appointments Professional Services" OR get(each,"SKU") == "AI Professional Services" OR get(each,"SKU") == "Integration Professional Services" OR get(each,"SKU") == "Custom Professional Services"){
			
		if(SKUArray[eachSKU] == "Workforce Management Professional Services" OR SKUArray[eachSKU] == "Appointments Professional Services" OR SKUArray[eachSKU] == "AI Professional Services" OR SKUArray[eachSKU] == "Integration Professional Services" OR SKUArray[eachSKU] == "Custom Professional Services"){
			
			hoursTotal = 0;
			
		}else{
			
				if(SKUArray[eachSKU] <> "Number of third party integration use cases"){
				
					for eachRecord in recordSet{
						
						if(SKUArray[eachSKU] == get(eachRecord,"SKU")){
							
							//print get(each,"SKU");
							//print get(eachRecord,"SKU");
							
							if(get(eachRecord,"Role_Type") == "ROS"){
								//print 6;
								//print get(eachRecord,"Hours");
								hoursTotal = atoi(get(eachRecord,"Bill_Hours")) + hypercareweeksHours + ((hypercareweeksHours / 4)* AdditionalHypercareweeks);
								//print hoursTotal;
							}
							if(get(eachRecord,"Role_Type") == "SKUhour"){
								//print 7;
								//print get(eachRecord,"Hours");
								hoursTotal = hoursTotal + atoi(get(eachRecord,"Bill_Hours"));
								//print hoursTotal;
							}
							if(get(eachRecord,"Role_Type") == "AdditionalLanguage"){
								//print 8;
								//print get(eachRecord,"Hours");
								hoursTotal = hoursTotal + 20 + atoi(get(eachRecord,"Bill_Hours")) * NumberofAdditionalLanguages;
								//print hoursTotal;
							}
							if(get(eachRecord,"Role_Type") == "AdditionalBanner"){
								//print 9;
								//print get(eachRecord,"Hours");
								if(NumberofAdditionalBanners > 0){
									hoursTotal = hoursTotal + atoi(get(eachRecord,"Bill_Hours")) * (NumberofAdditionalBanners - 1);
								}
								 //print hoursTotal;
							}
							
							if(SKUArray[eachSKU] == "Pulse Professional Services"){
								
								if(get(eachRecord,"Role_Type") == "PulseIntegration"){
								//print 10;
								//print get(eachRecord,"Hours");
								hoursTotal = hoursTotal + atoi(get(eachRecord,"Bill_Hours")) * pulseIntegrationQuantity;
								//print hoursTotal;
								}
								
								
							}
						
						
						}
				
				
					}	
		
				}
				
					
			}
			
					print "---------------------";
					print "hoursTotal:"; print hoursTotal;
					append(ret,hoursTotal);
			
					

				
		}
		
}

return ret;
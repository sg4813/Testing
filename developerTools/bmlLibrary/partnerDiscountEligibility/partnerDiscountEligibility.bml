//Tejasvi

maxPartnerdisc =0.0;
partnerAccountDiscountEligibility = String[];
partnerdiscount = float[];             
partnermember = string[];
discountEligibility ="";
priceGroup = json();
count = 0;
partnermember = PartnerMemberShip;
price = "";
currentDate = getdate();
discountEligibility ="";

priceGroupJsonString = jsonarray(PriceGroupString);
priceString = range(jsonarraysize(priceGroupJsonString));
for each in priceString {
	priceGroup = jsonarrayget(priceGroupJsonString, each , "json");
	
	isExpFound = jsonkeys(priceGroup);
	if(isExpFound[0] == Product){
		price = jsonget(priceGroup, Product);
		print price;
	}
}

results = bmql("SELECT * FROM Eligibility_Matrix WHERE PartnerProgram IN $partnermember AND PriceGroup = $price AND EffectiveTo IS NOT NULL " );

for eachrecord in results {
	EffecDate = get(eachrecord, "EffectiveTo");
	EffecDate1 = strtojavadate(EffecDate, "MM/dd/yyyy HH:mm:ss");
	if (comparedates(EffecDate1, currentDate)== 1){
		discountEligibility ="Y";
		append(partnerAccountDiscountEligibility, discountEligibility);
			
	}
	else {
		discountEligibility ="N";
		append(partnerAccountDiscountEligibility, discountEligibility);
	}
}
			
maxPartnerdisc =0.0;
tempEligiblity = findinarray(partnerAccountDiscountEligibility,"Y");
if(tempEligiblity > -1){				
	results = bmql("SELECT * FROM DiscountMatrix WHERE PartnerProgram IN $partnermember AND PriceGroup = $price");
	for eachDisc in results {
		partnerdisc = getfloat(eachDisc, "AdjustmentAmount");
		append(partnerdiscount, partnerdisc);
	}
	if (sizeofarray (partnerdiscount) >0) {
		maxPartnerdisc = max(partnerdiscount);
		print maxPartnerdisc;
	}
}else {
	maxPartnerdisc = 0.0;
}
return maxPartnerdisc;